@startuml
title Agent Services - Proposal Process v3\nComplete Process with PLATEAU Integration & MVP Clarification

skinparam dpi 150
skinparam activity {
  BackgroundColor White
  BorderColor Black
  StartColor Black
  EndColor Black
  DiamondBackgroundColor White
  DiamondBorderColor Black
  RoundCorner 20
}
skinparam note {
  BackgroundColor #E8F5E8
  BorderColor #4CAF50
}
skinparam partitionBorderColor #666666
skinparam partitionBackgroundColor #F9F9F9
skinparam shadowing false

start

partition "Agent Portal (Existing)" {
  fork
    :Fill NEW ACCOUNT SETUP\n(Web Form with validation);
    note right
    ðŸš€ AUTOMATION #1
    Web Form vs PDF
    â€¢ Real-time validation
    â€¢ No email back-and-forth
    â€¢ Automatic data capture
    â€¢ Document attachments
    â€¢ Pre-filled for returning agents
    â€¢ Behind Okta 2FA authentication
    end note
  fork again
    :Fill AGENT CHANGE REQUEST\n(Web Form with validation);
  end fork
  :Submit to Agent Services System\n(via API Gateway/DMZ);
}

partition "PLATEAU System (C#/Blazor)" {
  :Intake & Review Forms\n(Web Interface);
  :System creates agent entity\nStatus: CREATED;
  :Automatic validation checks:\n- Duplicate TIN detection\n- Required fields verification\n- Document completeness;
  if ("Validation passed?") then (Yes)
    :Status: IN_PROGRESS;
    :Notify operations team;
  else (No)
    :Status: REJECTED;
    :Send correction request to agent\nwith specific field issues;
    :Agent updates form and resubmits;
    :Status: CREATED;
  endif
  note right
    Built as PLATEAU module
    â€¢ C# and Blazor framework
    â€¢ Microsoft SQL backend
    â€¢ Modular architecture
    â€¢ Reusable components
    end note
}

partition "Operations Team" {
  :Verify Commissions vs General Agent Agreement\n(Web Interface);
  :Review agent setup requirements;
  :Validate business rules and compliance;
  if ("Operations approval?") then (Yes)
    :Status: OPERATIONS_APPROVED;
  else (No)
    :Status: OPERATIONS_REJECTED;
    :Send detailed feedback to agent;
    :Agent updates and resubmits;
    :Status: CREATED;
  endif
}

partition "Senior Officer" {
  if ("Status = OPERATIONS_APPROVED\nApprove New / Change Account?") then (YES)
    :Sign Off via Web Interface;
    :Status: APPROVED;
  else (NO)
    :Return for correction / decline;
    :Status: REJECTED;
    stop
  endif
}

partition "PLATEAU System (C#/Blazor)" {
  :Prepare/Update Master Policies\n(State/Product specific);
  :Prepare/Update Producer Agreement\n(State/Company variants);
  :Auto-generate documents with agent data pre-filled;
  note right
  ðŸš€ AUTOMATION #2
  Document Generation
  â€¢ Auto-fill from agent data
  â€¢ State-specific templates
  â€¢ Version control
  â€¢ Cloud storage integration
  end note

  if ("Reinsurance agreements needed?") then (YES)
    :Prepare / execute Reinsurance agreements;
  else (NO)
  endif

  if ("Retro agreements needed / executed?") then (YES)
    :Prepare / execute Retro agreements;
  else (NO)
  endif
}

partition "E-Sign Integration (Citrix ShareFile)" {
  :Email agreements for signature\nvia Citrix ShareFile E-Sign;
  :Status: WAITING_FOR_SIGNATURE;
  :Track signature status:\n- Document opened\n- Signature completed\n- All parties signed;
  if ("All signatures completed?") then (Yes)
    :Status: SIGNED;
    :Receive signed documents;
    :Store signed documents in system;
  else (No)
    :Send reminder notifications;
    :Wait for completion;
  endif
  note right
  ðŸš€ AUTOMATION #3
  E-Sign Integration
  â€¢ Citrix ShareFile with E-Sign capabilities
  â€¢ Automated signature tracking
  â€¢ Reminder notifications
  â€¢ Document storage
  â€¢ Status synchronization
  end note
}

partition "PLATEAU System (C#/Blazor)" {
  :Create Agent in EntityMaster\n(EntityType=Agent; addresses; flags; TIN; DAT%);
  :Status: PENDING;
  note right
  ðŸš€ AUTOMATION #4
  Automated Database Setup
  â€¢ No manual Excel operations
  â€¢ Hierarchical table management
  â€¢ Bulk operations support
  â€¢ Audit logging
  end note
}

' -------------------- PARALLEL PROCESSES AFTER SENIOR OFFICER APPROVAL --------------------
fork

partition "PLATEAU System (C#/Blazor)" {
  :Wait for First Monthly Report\n(arrears, 3â€“5 day rescission);
  if ("First report received?") then (YES)
    :Complete Agent Setup;
    :AgentSetupDirect (plans) Â«NEVER DELETEÂ»;
    :AgentSetupMasterCredit (commission, reins, risk, term, rates);
    :AgentSetupValuesCredit (durations 0-100 via Table_Num);
    :Optional: Copy all from old agent;
    :Reinsurance Setups;
    :Retro Setups;
    :Level II Setups;
    :Status: ACTIVE;
  else (NO)
    :Remain Pending;
    :No Plan Tables Configured;
  endif
}

fork again

if ("Licensing required?") then (Yes)
  partition "Licensing" {
    note right
      Licensing can work in PARALLEL
      with Agent Services system setup
      after Senior Officer approval
    end note
    :Maintain Appointments in Licensing DB\n(Integrated System);
    :Automated Monthly Letters â€“ New/Terminated;
    :Automated Annual Letters (Jan): roster cleanup\nwith email validation and delivery tracking;
    note right
    ðŸš€ AUTOMATION #5
    Licensing Integration
    â€¢ Automated letter generation
    â€¢ Email validation and tracking
    â€¢ Reduced manual printing/mailing
    â€¢ Integrated appointment management
    end note
  }
else (No)
  :Skip licensing process;
endif

end fork

' -------------------- PLATFORM INTEGRATION (AFTER LICENSING COMPLETE) --------------------
partition "Platform Integration" {
  note right
    Platform Integration happens AFTER
    licensing is complete (agent must be
    licensed before they can start working)
  end note
  if ("Certificate available?") then (YES)
    :Request Certificate from Platform;
  else (NO)
    :Program Certificate;
  endif

  :Create Worksheets and/or Questionnaires;
  :Perform Testing to Verify\nCalculations & Population;
  :Send worksheet and release forms\nto loan platform provider;
  :Enable forms and rates on platform;
}

note right
  Operations & Claims is a SEPARATE PROJECT
  (not part of Agent Services setup)
end note

' -------------------- EXCEPTION HANDLING (AFTER BUSINESS PROCESSING) --------------------
partition "Exception Handling" {
  note right
    Exception handling occurs AFTER
    business has been processed
    and exceptions come in
  end note
  
  if ("Commission mismatch?\nPlan mismatch?") then (YES)
    :Review originals;
    :Correct contracts;
    :Resend for signatures;
  else (NO)
    :Proceed;
  endif

  if ("Premium calculation errors?\nDocument errors?") then (YES)
    :Review setup;
    :Review rates/worksheets sent to agent;
    fork
      :Update APS to correct;
    fork again
      :Update with Agent to correct;
    end fork
  else (NO)
    :No further action;
  endif
}

end
@enduml
